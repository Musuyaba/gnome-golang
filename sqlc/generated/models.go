// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0

package generated

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type DataPrintStatus string

const (
	DataPrintStatusProduksi  DataPrintStatus = "produksi"
	DataPrintStatusKarantina DataPrintStatus = "karantina"
	DataPrintStatusReject    DataPrintStatus = "reject"
	DataPrintStatusLulus     DataPrintStatus = "lulus"
)

func (e *DataPrintStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DataPrintStatus(s)
	case string:
		*e = DataPrintStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for DataPrintStatus: %T", src)
	}
	return nil
}

type NullDataPrintStatus struct {
	DataPrintStatus DataPrintStatus
	Valid           bool // Valid is true if DataPrintStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullDataPrintStatus) Scan(value interface{}) error {
	if value == nil {
		ns.DataPrintStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.DataPrintStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullDataPrintStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.DataPrintStatus), nil
}

type DataPrint struct {
	ID           int64
	DataPrintID  sql.NullInt32
	ParentID     sql.NullInt32
	SerialLevel  sql.NullInt32
	Barcode      sql.NullString
	Serialisasi  string
	BatchNo      sql.NullString
	ProcessOrder string
	Scanned      sql.NullTime
	Product      sql.NullString
	Nie          sql.NullString
	Sku          sql.NullString
	Counter      sql.NullInt32
	Berat        sql.NullString
	Md           sql.NullTime
	Ed           sql.NullTime
	Username     sql.NullString
	StationName  sql.NullString
	Grup         sql.NullString
	Ipc          sql.NullString
	Sample       sql.NullTime
	Packer       sql.NullString
	UploadLine   time.Time
	Status       DataPrintStatus
	Sjp          sql.NullString
	Done         sql.NullInt32
	Sync         sql.NullInt32
}
